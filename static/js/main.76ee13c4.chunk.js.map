{"version":3,"sources":["axios.js","Chat.js","SidebarChat.js","Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Chat","_ref","messages","_useState","useState","_useState2","Object","slicedToArray","input","setInput","react_default","a","createElement","className","Avatar","IconButton","SearchOutlined","AttachFile","MoreVert","map","message","concat","received","name","timestamp","InsertEmoticon_default","value","onChange","e","target","placeholder","type","onClick","preventDefault","post","Mic_default","SidebarChat","Sidebar","src","DonutLarge_default","icons_Chat_default","MoreVert_default","src_SidebarChat","App","setMessages","useEffect","get","then","response","data","Pusher","cluster","subscribe","bind","newMessage","toConsumableArray","console","log","src_Sidebar","src_Chat","reportWebVitals","onPerfEntry","Function","__webpack_require__","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.76ee13c4.chunk.js","sourcesContent":["import axios from \"axios\"\n\n\nconst instance = axios.create({\n    baseURL: \"http://localhost:9000\",\n});\n\nexport default instance;","import { Avatar, IconButton } from '@material-ui/core'\nimport { AttachFile, MoreVert, SearchOutlined } from '@material-ui/icons'\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon'\nimport MicIcon from '@material-ui/icons/Mic'\nimport React, { useState } from 'react'\nimport \"./Chat.css\"\nimport axios from './axios'\n\nfunction Chat({ messages }) {\n    const [input, setInput] = useState(\"\");\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n\n        axios.post('/messages/new', {\n            message: input, \n            name: \"Oumayma\",\n            timestamp: \"I'm a demo timestamp ...\",\n            received: true\n        });\n\n        setInput(\"\");\n    };\n\n    return (\n        <div className=\"chat\">\n            <div className=\"chat__header\">\n                <Avatar/>\n                <div className=\"chat_headerInfo\">\n                    <h3>Room name</h3>\n                    <p>last seen at ...</p>\n                </div>\n\n                <div className=\"chat_hederRight\">\n                    <IconButton>\n                        <SearchOutlined/>\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile/>\n                    </IconButton>\n                    <IconButton>\n                        <MoreVert/>\n                    </IconButton>\n                </div>\n\n            </div>\n            <div className=\"chat__body\">\n                {messages.map((message) => (\n                    //if the received msg is true only then attach the chat__receiver class\n                     <p className={`chat__message ${message.received && \"chat__reciever\"} `}>\n                     <span className=\"chat__name\">{message.name}</span>\n                        {message.message}\n                     <span className=\"chat__timestamp\">\n                         {\n                            //new Date().toUTCString()\n                            message.timestamp\n                         }\n                     </span>\n                 </p>\n                ))}\n            </div>\n\n            <div className=\"chat__footer\">\n                    <InsertEmoticonIcon />\n                    <form>\n                        <input value={input} \n                        onChange={(e) => setInput(e.target.value)} \n                        placeholder=\"Type a message\"\n                        type=\"text\" />\n                        <button onClick={sendMessage} type=\"submit\">Send a message</button>\n                    </form>\n                    <MicIcon />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n","import { Avatar } from '@material-ui/core'\nimport React from 'react'\nimport \"./SidebarChat.css\"\n\nfunction SidebarChat() {\n    return (\n        <div className=\"sidebarChat\">\n            <Avatar/>\n            <div className=\"sidebarChat__info\">\n                <h2>Room name</h2>\n                <p>This is the last message</p>\n            </div>\n        </div>\n    )\n}\n\nexport default SidebarChat\n","import React from 'react'\nimport  \"./Sidebar.css\"\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\"\nimport {Avatar, IconButton } from '@material-ui/core';\nimport ChatIcon from \"@material-ui/icons/Chat\"\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\"\nimport { SearchOutlined } from '@material-ui/icons';\nimport SidebarChat from './SidebarChat';\n\nfunction Sidebar() {\n    return (\n        <div className=\"sidebar\">\n                  <div className=\"sidebar__header\">\n                      <Avatar src=\"https://png.pngtree.com/png-clipart/20190516/original/pngtree-cute-girl-avatar-material-png-image_4023832.jpg\"/>\n                    <div className=\"sidebar__headerRight\">\n                        <IconButton>\n                           <DonutLargeIcon />\n                        </IconButton>\n                        <IconButton>\n                           <ChatIcon />\n                        </IconButton>\n                        <IconButton>\n                           <MoreVertIcon />\n                        </IconButton>\n                    </div>\n                  </div>\n                  <div className=\"sidebar__search\">\n                      <div className=\"sidebar__searchContainer\">\n                            <SearchOutlined />\n                            <input placeholder=\"Search or start a new chat\" type=\"text\"/>\n                      </div>\n                  </div>\n\n                  <div className=\"sidebar__chats\">\n                    <SidebarChat/>\n                    <SidebarChat/>\n                    <SidebarChat/>\n                    <SidebarChat/>\n                    \n                  </div>\n        </div>\n    )\n}\n\nexport default Sidebar;\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Chat from './Chat';\nimport Sidebar from './Sidebar';\nimport Pusher from 'pusher-js'\nimport axios from './axios';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    axios.get('/messages/sync')\n    .then( response => {\n      setMessages(response.data);\n    })\n  })\n\n  useEffect(() => {\n    const pusher = new Pusher('5221795f179b0f16a1a8', {\n      cluster: 'eu',\n    });\n\n    const channel = pusher.subscribe('messages');\n    channel.bind('inserted', (newMessage) => {\n      //that means keep all messages ([] ...messages) and also the new ones (newMessage)\n      setMessages([...messages, newMessage]);\n    });\n\n    //cleanup function\n\n\n  }, [messages])\n\n  console.log(messages);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__body\">\n       {/* Sidebar Component */}\n       <Sidebar/>\n      {/* Chat Compnent */}\n      <Chat messages={messages} />\n      </div>  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}